{"version":3,"file":"game.js","sources":["node_modules/auto-reload-brunch/vendor/auto-reload.js","src/game.coffee"],"names":[],"mappings":"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","sourcesContent":["(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=\"stylesheet\"][href]:not([data-autoreload=\"false\"]'))\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n","module.exports = ->\n# Find some good random phrases here:\n# http://www.smartphrase.com/cgi-bin/randomphrase.cgi?spanish&humorous&normal&16&11&12&15&1&4\n# quote api: http://iheartquotes.com/api\n\n  decodeKeyStates =\n    HIDDEN: 0\n    REVEALED: 1\n    SOLVED: 2\n\n  secretMessage = undefined\n  comboGroups = undefined\n  decodeKey = undefined\n  comboStream = undefined\n  score = undefined\n  moves = undefined\n\n  isLetter = (char) ->\n    /[a-z]/i.test char\n  isLetterOrSpace = (char) ->\n    /[a-z\\s]/i.test char\n  isSpace = (char) ->\n    /[\\s]/i.test char\n\n  hideLetters = (char) ->\n    if not isLetter char\n      decodeKeyStates.SOLVED\n    else\n      decodeKeyStates.HIDDEN\n\n  decodeChar = (secretChar, decodingStatus)  ->\n    if shouldReveal decodingStatus\n      return secretChar\n    else\n      return \"_\"\n\n  # encodedMessage, decodeKey -> decodedMessage\n  decode = R.compose(R.join(''), R.zipWith(decodeChar))\n\n  sentanceToWords = (sentance) ->\n    breakIntoWords = (acc, char, index) ->\n      if isLetterOrSpace char\n        if isSpace char\n          acc.push []\n        else\n          charInfo =\n            char: char\n            index: index\n            reveal: false\n          acc[acc.length - 1].push charInfo\n      acc\n    R.reduceIndexed breakIntoWords, [[]], sentance\n\n\n  shouldReveal = (decodingStatus) ->\n    decodingStatus in [decodeKeyStates.REVEALED, decodeKeyStates.SOLVED]\n\n  comboToString = R.compose R.join(\"\"), R.map(R.prop \"char\")\n\n  setIndexIfNotSolved = (value, arr, index) ->\n    if arr[index] isnt decodeKeyStates.SOLVED\n      arr[index] = value\n    arr\n\n  setIndexes = R.curry (value, arr, indexes) ->\n    R.reduce R.partial(setIndexIfNotSolved, value), arr, indexes\n\n\n  setIndexesToSolved = setIndexes decodeKeyStates.SOLVED\n  setIndexesToRevealed = setIndexes decodeKeyStates.REVEALED\n\n  resetAllUnsolved = (decodeKey) ->\n    nullifyAllNonSolved = (i) ->\n      if i is decodeKeyStates.SOLVED then i else decodeKeyStates.HIDDEN\n    R.map nullifyAllNonSolved, decodeKey\n\n  updatedecodeKey = (comboString, decodeKey, comboGroup) ->\n    pattern = new RegExp \"^\" + comboString, \"i\"\n    comboGroupString = comboToString comboGroup\n\n    if pattern.test comboGroupString\n      indexes = R.map(R.prop \"index\") R.take comboString.length, comboGroup\n      if comboString.length is comboGroup.length\n        return setIndexesToSolved decodeKey, indexes\n      else\n        return setIndexesToRevealed decodeKey, indexes\n    else\n      return decodeKey\n\n\n  getAllMatches = (comboGroups, comboStream, decodeKey) ->\n    if comboStream.length < 1\n      return decodeKey\n    comboString = comboToString comboStream\n    decodeKey = R.reduce R.partial(updatedecodeKey, comboString), decodeKey, comboGroups\n    return getAllMatches comboGroups, comboStream.slice(1), decodeKey\n\n\n  getValidComboStream = (comboStream, comboGroups) ->\n    if comboStream.length < 1\n      # no valid combo\n      return []\n\n    comboString = comboToString comboStream\n    pattern = new RegExp \"^\" + comboString, \"i\"\n    joinAndMatch = R.compose(R.match(pattern), comboToString)\n    isValidCombo = R.any joinAndMatch, comboGroups\n\n    if isValidCombo\n      return comboStream\n    else\n      # recurse with shorter and shorter combo streams\n      getValidComboStream comboStream.slice(1), comboGroups\n\n\n  # main \"loop\"\n  onKeyDown =  (render, e) ->\n    key = e.keyCode\n\n    # give up?\n    if e.keyCode is 191 # \"?\"\n      # give up; show the secret message\n     render secretMessage, \"You gave up!\", 0\n\n    char = String.fromCharCode(key).toLowerCase()\n    # ignore non-letter inputs\n    if isLetter char\n      # update state\n      moves++\n      score = Math.max(0, score - 1)\n      potentialCombo = R.concat comboStream, [{char:char}]\n      comboStream = getValidComboStream potentialCombo, comboGroups\n      decodeKey = resetAllUnsolved decodeKey\n      decodeKey = getAllMatches comboGroups, comboStream, decodeKey\n\n      # display\n      console.log 'comboStream:', comboToString comboStream\n      console.log 'decodeKey:', decodeKey\n      render decode(secretMessage, decodeKey), (comboToString(comboStream) or char), score\n\n      # won?\n      totalUnsolved = R.length R.filter(R.not(R.eq(decodeKeyStates.SOLVED))) decodeKey\n      if totalUnsolved is 0\n        render decode(secretMessage, decodeKey), \"SOLVED in #{moves} moves!\", score\n\n\n  initializeGame = (render) ->\n\n    messages = [\"There's no such thing as a free lunch.\", \"Here, there, and everywhere.\"]\n\n    # set initial game state\n\n    # static\n    secretMessage = messages.pop() or \"No more messages left.\"\n    comboGroups = sentanceToWords secretMessage\n\n    # dynamic\n    decodeKey = R.map hideLetters, secretMessage\n    comboStream = []\n    score = R.filter(isLetter, secretMessage).length * 5\n    moves = 0\n\n    # start game\n    render decode(secretMessage, decodeKey), \"Type letter combos to reveal the hidden message.\", score\n    document.addEventListener \"keydown\", R.partial onKeyDown, render\n\n\n\n# kick off\n  document.onreadystatechange = ->\n    if document.readyState is \"complete\"\n      $secretMessage = document.getElementById(\"secret-message\")\n      $feedback = document.getElementById(\"feedback\")\n      $score = document.getElementById(\"score\")\n      render = (secretMessage, feedback, score) ->\n        $secretMessage.innerText = secretMessage\n        $feedback.innerText = feedback\n        $score.innerText = score\n\n      initializeGame render\n"]}