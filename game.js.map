{"version":3,"file":"game.js","sources":["node_modules/auto-reload-brunch/vendor/auto-reload.js","src/game.coffee"],"names":[],"mappings":"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","sourcesContent":["(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=\"stylesheet\"][href]:not([data-autoreload=\"false\"]'))\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n","module.exports = ->\n# Find some good random phrases here:\n# http://www.smartphrase.com/cgi-bin/randomphrase.cgi?spanish&humorous&normal&16&11&12&15&1&4\n# quote api: http://iheartquotes.com/api\n\n  secretMessage = \"There's no such thing as a free lunch.\"\n\n  decoderStates =\n    HIDDEN: 0\n    REVEALED: 1\n    SOLVED: 2\n  comboStream = []\n  render = undefined\n  decoder = undefined\n\n  isLetter = (char) ->\n    /[a-z]/i.test char\n  isLetterOrSpace = (char) ->\n    /[a-z\\s]/i.test char\n  isSpace = (char) ->\n    /[\\s]/i.test char\n\n  score = R.filter(isLetter, secretMessage).length * 5\n\n  getDecodeState = (char) ->\n    if not isLetter char\n      decoderStates.SOLVED\n    else\n      decoderStates.HIDDEN\n\n  decodeChar = (secretChar, decodingStatus)  ->\n    if shouldReveal decodingStatus\n      return secretChar\n    else\n      return \"_\"\n\n  sentanceToWords = (sentance) ->\n    breakIntoWords = (acc, char, index) ->\n      if isLetterOrSpace char\n        if isSpace char\n          acc.push []\n        else\n          charInfo =\n            char: char\n            index: index\n            reveal: false\n          acc[acc.length - 1].push charInfo\n      acc\n    R.reduceIndexed breakIntoWords, [[]], sentance\n\n  decodeMessage = R.compose R.join(''), R.zipWith(decodeChar, secretMessage)\n\n  comboGroups = sentanceToWords secretMessage\n\n  shouldReveal = (decodingStatus) ->\n    decodingStatus in [decoderStates.REVEALED, decoderStates.SOLVED]\n\n  comboToString = R.compose R.join(\"\"), R.map(R.prop \"char\")\n\n  setIndex = (value, arr, index) ->\n    if arr[index] isnt decoderStates.SOLVED\n      arr[index] = value\n    arr\n\n  setIndexes = R.curry (value, arr, indexes) ->\n    R.reduce R.partial(setIndex, value), arr, indexes\n\n\n  setIndexesToSolved = setIndexes decoderStates.SOLVED\n  setIndexesToRevealed = setIndexes decoderStates.REVEALED\n\n  resetDecoder = (decoder) ->\n    nullifyAllNonSolved = (i) ->\n      if i is decoderStates.SOLVED then i else decoderStates.HIDDEN\n    R.map nullifyAllNonSolved, decoder\n\n  updateDecoder = (comboString, decoder, comboGroup) ->\n    setDecoderIndexesToSolved = setIndexesToSolved decoder\n    setDecoderIndexesToRevealed = setIndexesToRevealed decoder\n    pattern = new RegExp \"^\" + comboString, \"i\"\n    comboGroupString = comboToString comboGroup\n\n    if pattern.test comboGroupString\n      indexes = R.map(R.prop \"index\") R.take comboString.length, comboGroup\n      if comboString.length is comboGroup.length\n        return setDecoderIndexesToSolved indexes\n      else\n        return setDecoderIndexesToRevealed indexes\n    else\n      return decoder\n\n\n  getAllMatches = (comboGroups, comboStream, decoder) ->\n    if comboStream.length < 1\n      return decoder\n    comboString = comboToString comboStream\n    decoder = R.reduce R.partial(updateDecoder, comboString), decoder, comboGroups\n    return getAllMatches comboGroups, comboStream.slice(1), decoder\n\n\n  getValidComboStream = (comboStream, comboGroups) ->\n    if comboStream.length < 1\n      # no valid combo\n      return []\n\n    comboString = comboToString comboStream\n    pattern = new RegExp \"^\" + comboString, \"i\"\n    joinAndMatch = R.compose(R.match(pattern), comboToString)\n    isValidCombo = R.any joinAndMatch, comboGroups\n\n    if isValidCombo\n      return comboStream\n    else\n      # recurse with shorter and shorter combo streams\n      getValidComboStream comboStream.slice(1), comboGroups\n\n\n\n# main \"loop\"\n  onKeyDown =  (e) ->\n    key = e.keyCode\n    if e.keyCode is 191 #?\n      # give up; show the secret message\n     render decodeMessage(R.map R.always(decoderStates.SOLVED), decoder), \"You gave up!\", 0\n    char = String.fromCharCode(key).toLowerCase()\n    # ignore non-letter inputs\n    if isLetter char\n      score = Math.max(0, score - 1)\n      decoder = resetDecoder decoder\n      potentialCombo = R.concat comboStream, [{char:char}]\n      comboStream = getValidComboStream potentialCombo, comboGroups\n      console.log 'comboStream:', comboToString comboStream\n      decoder = getAllMatches comboGroups, comboStream, decoder\n      console.log 'decoder:', decoder\n      render decodeMessage(decoder), (comboToString(comboStream) or char), score\n\n      totalUnsolved = R.length R.filter(R.not(R.eq(decoderStates.SOLVED))) decoder\n      if totalUnsolved is 0\n        render decodeMessage(decoder), \"You win!\", score\n\n\n\n\n# kick off\n  document.onreadystatechange = ->\n    if document.readyState is \"complete\"\n      # start up sequence\n      decoder = R.map getDecodeState, secretMessage\n      $secretMessage = document.getElementById(\"secret-message\")\n      $feedback = document.getElementById(\"feedback\")\n      $score = document.getElementById(\"score\")\n      render = (secretMessage, feedback, score) ->\n        $secretMessage.innerText = secretMessage\n        $feedback.innerText = feedback\n        $score.innerText = score\n\n      render decodeMessage(decoder), \"Type letter combos to reveal the hidden message.\", score\n      document.addEventListener \"keydown\", onKeyDown\n\n"]}